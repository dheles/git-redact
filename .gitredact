#!/bin/bash

redactfiles=("$@")

# store the values to be swapped in an array
swap_array=($(sed -n '/^#/n
/ \= / ! {
  s/^\(.*\)$/\1 remove/p
}
s/\(.*\) \= \(.*\)$/\1 \2/p
' < .gitredact-template))

len=${#swap_array[*]}

#echo "The length of swap_array is ${#swap_array[*]}."
#for element in ${swap_array[*]}; do
  #echo $element
#done

# The value we\'re searching for - .gitredact-template
# The exact match of values we\'ve found - the process run by redact.sed
# The value we\'re replacing with - .gitredact-template
# The line number of any matches - the process run by redact.sed

# write the redaction rules to a file. store the line numbers in an array
for ((i=0; i<$len; i=(i+2))); do
  # in swap_array, replace the pattern with its actual match
  if [ "${swap_array[i]}" != "$(grep -om 1 ${swap_array[i]} $1)" ]; then
    swap_array[i]="$(grep -om 1 ${swap_array[i]} $1)"
  fi
 
  # there\'s no array.push() in bash...
  operations[${#operations[*]}]=$(sed -n "/${swap_array[i]}/ =" $1)

  if [ ${swap_array[(i+1)]} == 'remove' ]; then
    echo -e "/${swap_array[i]}/ d" >> redact.sed
    operations[${#operations[*]}]="${swap_array[i]}"
    operations[${#operations[*]}]='remove'
  else
    echo -e "/${swap_array[i]}/ {\n  s/${swap_array[i]}/${swap_array[(i+1)]}/g\n}" >> redact.sed
    operations[${#operations[*]}]="${swap_array[i]}"
    operations[${#operations[*]}]="${swap_array[(i+1)]}"
  fi
done

#for value in ${swap_array[*]}; do
  #echo $value
#done
#echo "The length of swap_array is ${#swap_array[*]}."

#for number in ${operations[*]}; do
  #echo $number
#done
#echo "The length of operations is ${#operations[*]}."

o_len=${#operations[*]}

# print the results to standard output and prompt for approval
for ((i=0; i<$o_len; i=(i+3))); do
  if [ ${operations[(i+2)]} == 'remove' ]; then
    echo "I removed line ${operations[i]}, which contained \"${operations[(i+1)]}\"."
  else
    echo "On line ${operations[i]}, I replaced \"${operations[(i+1)]}\" with \"${operations[(i+2)]}\"."
  fi
done

echo -e "\n--> You approve these changes? (Hit \"y\" or \"n\")"

#for file in ${redactfiles[*]}; do
  #for ((i=0; i<$len; i=(i+2))); do
    #sed '' $file
  #done
#done

sed -f redact.sed < $1 > test_redaction.txt

#sed -n '$ s/redacted/&/p' ./.gitredact

redacted=true
